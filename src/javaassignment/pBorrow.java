/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaassignment;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Scanner;
import javax.swing.JOptionPane;  
import java.util.Calendar;
/**
 *
 * @author johar
 */
public class pBorrow extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public pBorrow() {
        initComponents();
        AutoBorrowID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackground3 = new javax.swing.JPanel();
        panelTitle = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        pnlButton = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnBorrow = new javax.swing.JButton();
        pnlBookInfo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        txtDetailsBookID = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtGenre = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtBookDetailsQuantity = new javax.swing.JTextField();
        pnlContent = new javax.swing.JPanel();
        lblBookID = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblBorrowID = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtBookID = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtBorrowID = new javax.swing.JTextField();
        lblDueDate = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnGetDate = new javax.swing.JButton();
        btnGetDetails = new javax.swing.JButton();
        btnCheckID = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VILB Book Management System");
        setResizable(false);

        panelBackground3.setBackground(new java.awt.Color(163, 193, 173));
        panelBackground3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        panelTitle.setBackground(new java.awt.Color(0, 33, 71));

        lblTitle1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("VILB");
        lblTitle1.setPreferredSize(new java.awt.Dimension(20, 14));

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Borrow");
        lblTitle.setPreferredSize(new java.awt.Dimension(20, 14));

        javax.swing.GroupLayout panelTitleLayout = new javax.swing.GroupLayout(panelTitle);
        panelTitle.setLayout(panelTitleLayout);
        panelTitleLayout.setHorizontalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTitleLayout.setVerticalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pnlButton.setOpaque(false);
        pnlButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(63, 124, 172));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.setMaximumSize(new java.awt.Dimension(100, 50));
        btnBack.setMinimumSize(new java.awt.Dimension(100, 50));
        btnBack.setPreferredSize(new java.awt.Dimension(100, 50));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        pnlButton.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        btnBorrow.setBackground(new java.awt.Color(63, 124, 172));
        btnBorrow.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrow.setText("Borrow");
        btnBorrow.setEnabled(false);
        btnBorrow.setMaximumSize(new java.awt.Dimension(100, 50));
        btnBorrow.setMinimumSize(new java.awt.Dimension(100, 50));
        btnBorrow.setPreferredSize(new java.awt.Dimension(100, 50));
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });
        pnlButton.add(btnBorrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, -1));

        pnlBookInfo.setDoubleBuffered(false);
        pnlBookInfo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pnlBookInfo.setName(""); // NOI18N

        jLabel5.setText("Book Name");

        jLabel6.setText("Book ID");

        jLabel7.setText("Genre");

        jLabel8.setText("Publisher");

        jLabel9.setText("Author");

        txtBookName.setEditable(false);

        txtDetailsBookID.setEditable(false);

        txtPublisher.setEditable(false);

        txtAuthor.setEditable(false);

        txtGenre.setEditable(false);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Book Details");

        jLabel12.setText("Quantity");

        txtBookDetailsQuantity.setEditable(false);

        javax.swing.GroupLayout pnlBookInfoLayout = new javax.swing.GroupLayout(pnlBookInfo);
        pnlBookInfo.setLayout(pnlBookInfoLayout);
        pnlBookInfoLayout.setHorizontalGroup(
            pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookInfoLayout.createSequentialGroup()
                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBookInfoLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel10))
                    .addGroup(pnlBookInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11))
                    .addGroup(pnlBookInfoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBookInfoLayout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(40, 40, 40)
                                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDetailsBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBookDetailsQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlBookInfoLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlBookInfoLayout.setVerticalGroup(
            pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookInfoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel11)
                .addGap(27, 27, 27)
                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDetailsBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlBookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtBookDetailsQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblBookID.setText("Book ID");

        lblID.setText("Client ID");

        lblBorrowID.setText("Borrow ID");

        lblDate.setText("Date");

        txtID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIDFocusLost(evt);
            }
        });

        txtDate.setEditable(false);

        txtBorrowID.setEditable(false);

        lblDueDate.setText("Due Date");

        txtDueDate.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Borrowing Details");

        btnGetDate.setBackground(new java.awt.Color(63, 124, 172));
        btnGetDate.setForeground(new java.awt.Color(255, 255, 255));
        btnGetDate.setText("Get Date");
        btnGetDate.setMaximumSize(new java.awt.Dimension(100, 50));
        btnGetDate.setMinimumSize(new java.awt.Dimension(100, 50));
        btnGetDate.setPreferredSize(new java.awt.Dimension(100, 50));
        btnGetDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDateActionPerformed(evt);
            }
        });

        btnGetDetails.setBackground(new java.awt.Color(63, 124, 172));
        btnGetDetails.setForeground(new java.awt.Color(255, 255, 255));
        btnGetDetails.setText("Get Details");
        btnGetDetails.setEnabled(false);
        btnGetDetails.setMaximumSize(new java.awt.Dimension(100, 50));
        btnGetDetails.setMinimumSize(new java.awt.Dimension(100, 50));
        btnGetDetails.setPreferredSize(new java.awt.Dimension(100, 50));
        btnGetDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDetailsActionPerformed(evt);
            }
        });

        btnCheckID.setBackground(new java.awt.Color(63, 124, 172));
        btnCheckID.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckID.setText("Check ID");
        btnCheckID.setMaximumSize(new java.awt.Dimension(100, 50));
        btnCheckID.setMinimumSize(new java.awt.Dimension(100, 50));
        btnCheckID.setPreferredSize(new java.awt.Dimension(100, 50));
        btnCheckID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlContentLayout = new javax.swing.GroupLayout(pnlContent);
        pnlContent.setLayout(pnlContentLayout);
        pnlContentLayout.setHorizontalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(pnlContentLayout.createSequentialGroup()
                        .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDueDate)
                            .addComponent(lblBookID)
                            .addComponent(lblDate)
                            .addComponent(lblID)
                            .addComponent(lblBorrowID))
                        .addGap(34, 34, 34)
                        .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBookID, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(txtDate)
                            .addComponent(txtDueDate)
                            .addComponent(txtID)
                            .addComponent(txtBorrowID, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(31, 31, 31)
                        .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGetDate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGetDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCheckID, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        pnlContentLayout.setVerticalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBorrowID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBorrowID))
                .addGap(18, 18, 18)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBookID)
                    .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGetDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDate)
                    .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGetDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDueDate)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelBackground3Layout = new javax.swing.GroupLayout(panelBackground3);
        panelBackground3.setLayout(panelBackground3Layout);
        panelBackground3Layout.setHorizontalGroup(
            panelBackground3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelBackground3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelBackground3Layout.createSequentialGroup()
                .addComponent(pnlContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBookInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelBackground3Layout.setVerticalGroup(
            panelBackground3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackground3Layout.createSequentialGroup()
                .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBackground3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBookInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
     pMainMenu mainMenuPage = new pMainMenu();
     mainMenuPage.show();
     dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    String filename;         // File name
    String borrowID = "1", ID, bookID, borrowDate, dueDate, returnDate = "1/01/2000";
    private void btnGetDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDateActionPerformed
       /*DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/YYYY");  
       LocalDateTime now = LocalDateTime.now(); 
       Date currentDate = new Date();
       
       txtDate.setText(dtf.format(now));
        
        Calendar c = Calendar.getInstance();
        c.setTime(currentDate);

        // manipulate date
        c.add(Calendar.DAY_OF_MONTH, 14);
 
        txtDueDate.setText(dtf.format(now));*/
       
        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat datef = new SimpleDateFormat("dd/MM/yyyy");
        
       
        txtDate.setText(datef.format(currentDate.getTime()));
        currentDate.add(Calendar.DAY_OF_MONTH, 14); //Adding 14 days to current date
        txtDueDate.setText(datef.format(currentDate.getTime()));
    }//GEN-LAST:event_btnGetDateActionPerformed

    String dir;
     private void AutoBorrowID(){
        //DecimalFormat dc = new DecimalFormat("000000");
        // This is to ensure the entire method have access to the selectedID array
        String[] selectedID = null;
        try {
            dir = System.getProperty("user.dir") + "\\src\\DB\\";
            // For debugging purpose only
            // JOptionPane.showMessageDialog(null, bID);
            File booktxt = new File(dir + "borrow_t.txt");
            Scanner inputFile;
            try {
                String lastBookID;
                inputFile = new Scanner(booktxt);
                // Read lines from the file until no more are left.
                while (inputFile.hasNext())
                {
                   // Read the next line.
                   String bEntry = inputFile.nextLine();
                   // Split the line by using the delimiter ":" (semicolon) and store into array.
                   selectedID = bEntry.split(":");
                }
                inputFile.close();
                int newBorrowID = Integer.parseInt(selectedID[0]) + 1;
                txtBorrowID.setText(String.valueOf(newBorrowID));
                
            } catch (FileNotFoundException ex) {
              
            }
        }
        catch (Exception ex) {
   
        }
    }
    
    
    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
       
        int quantity = Integer.parseInt(txtBookDetailsQuantity.getText());
        if (quantity <= 0){
            //System.out.println(quantity);
            JOptionPane.showMessageDialog(null, "Cannot Borrow Book! Book quantity is 0");
            ClearText();
        } else {
        //File f = new File("Hello World");
        //System.out.println(f.createNewFile());
        try{

            filename = "src\\DB\\borrow_t.txt";

            // Open the file.
            //Add onto the existing file
            FileWriter fw = new FileWriter(filename, true);
            PrintWriter outputFile = new PrintWriter(fw);

            //Overide the existing file

            borrowID = txtBorrowID.getText();
            ID = txtID.getText();
            bookID = txtBookID.getText();
            borrowDate = txtDate.getText();
            dueDate = txtDueDate.getText();

            IsEmpty = true;
            CheckEmpty();

            if (IsEmpty == false){

                // Write the name to the file.
                outputFile.println(borrowID + ":" + ID + ":" + bookID + ":" + borrowDate + ":" + dueDate + ":" +returnDate + ":false:false:0.00");

                outputFile.close(); // Close the file.
                System.out.println("Data written to the file.");

                JOptionPane.showMessageDialog(null, "Borrow Succesful!");
                UpdateQuantity();
                ClearText();
                ClearBook();
                AutoBorrowID();
            }else {
                JOptionPane.showMessageDialog(null, "Make sure all input fields are properly keyed in");

            }

        }
        catch(Exception e){

            JOptionPane.showMessageDialog(null, "An error occured!");
        }
    }//GEN-LAST:event_btnBorrowActionPerformed
    }   
    
    String BookID;
    private void btnGetDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDetailsActionPerformed
        String[] selectedID;
        
        btnBorrow.setEnabled(false);
        boolean hasResult = false;
        BookID = txtBookID.getText();
 
        try {
            dir = System.getProperty("user.dir") + "\\src\\DB\\";
            File clienttxt = new File(dir + "book_t.txt");
            Scanner inputFile;
            try {
                inputFile = new Scanner(clienttxt);
                
                while (inputFile.hasNext())
                {
                    
                    String nextLine = inputFile.nextLine();
                    
                    selectedID = nextLine.split(":");
                    //System.out.println(BookID);
                    if (selectedID[0].equals(BookID)){
                        
                            hasResult = true;
                            txtDetailsBookID.setText(selectedID[0]);
                            txtBookName.setText(selectedID[1]);
                            txtGenre.setText(selectedID[2]);
                            txtPublisher.setText(selectedID[3]);
                            txtAuthor.setText(selectedID[4]);
                            txtBookDetailsQuantity.setText(selectedID[5]);
                            
                            btnBorrow.setEnabled(true);
    
                    }
                }
                
                if (hasResult == false){
                        JOptionPane.showMessageDialog(null, "No Book ID found");
                        ClearBook();
                }
                
                
                inputFile.close();
                
            } catch (FileNotFoundException ex) {
            }
        }
        catch (Exception e) {
            e.printStackTrace();
            
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null, "No Borrow ID found!", "No Borrow ID found!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGetDetailsActionPerformed

    String ClientID;
    boolean hasID;
    private void btnCheckIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckIDActionPerformed
        String[] selectedID;
        ClientID = txtID.getText();
        hasID = false;
 
        try {
            dir = System.getProperty("user.dir") + "\\src\\DB\\";
            File clienttxt = new File(dir + "client_t.txt");
            Scanner inputFile;
            try {
                inputFile = new Scanner(clienttxt);
                
                while (inputFile.hasNext())
                {
                    
                    String nextLine = inputFile.nextLine();
                    
                    selectedID = nextLine.split(":");
                    //System.out.println(ClientID);
                    if (selectedID[0].equals(ClientID)){
                            hasID = true;
                           JOptionPane.showMessageDialog(null, "ID Validated");
                            btnGetDetails.setEnabled(true);
    
                }
                }
                
                if(hasID == false){
                            JOptionPane.showMessageDialog(null, "No ID Found!");
                            btnGetDetails.setEnabled(false);
                            txtID.setText("");
                            
            }
                
               
                
                
                inputFile.close();
                
            } catch (FileNotFoundException ex) {
            }
        }
        catch (Exception e) {
            e.printStackTrace();
            
            //JOptionPane.showMessageDialog(null,e);
            JOptionPane.showMessageDialog(null, "No Borrow ID found!", "No Borrow ID found!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckIDActionPerformed

    private void txtIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIDFocusLost
        
        if(txtID.getText().contains(":")){
            JOptionPane.showMessageDialog(null, "Invalid symbol ':' used ");
                txtID.setText("");
       } 
    }//GEN-LAST:event_txtIDFocusLost
    
    String saveDir, clientID, BookIDQuantity;
    int bookQuantity;
    private void UpdateQuantity(){
    saveDir = System.getProperty("user.dir") + "\\src\\DB\\";
             String[] selectedBookID;
             BookIDQuantity = txtDetailsBookID.getText();
             System.out.println("Get text is " +txtDetailsBookID.getText());
             
            dir = System.getProperty("user.dir") + "\\src\\DB\\";
            File booktxt = new File(dir + "book_t.txt");
            Scanner inputFile;
            try {
                inputFile = new Scanner(booktxt);

                while (inputFile.hasNext())
                {

                    String nextLine = inputFile.nextLine();

                    selectedBookID = nextLine.split(":");
                    if (selectedBookID[0].equals(BookIDQuantity)){
                        
                        bookQuantity = Integer.parseInt(selectedBookID[5]);
                            
                        }else {
                            //JOptionPane.showMessageDialog(null, "Cannot find the book", "Please ensure that the proper book ID is entered", JOptionPane.ERROR_MESSAGE);
                            ClearText();
                        } 
                    }
                 inputFile.close();
            }catch (Exception e) {
              JOptionPane.showMessageDialog(null, "An Error Occured!");
              JOptionPane.showMessageDialog(null, e);
            }
            
            bookQuantity = bookQuantity - 1;
            System.out.println("Book Quantity is " + bookQuantity);
            
        try {
   
                 
                File book2 = new File(saveDir + "book_t.txt");
                File bookTemp2 = new File(saveDir + "bookTemp_t.txt");

                if (!bookTemp2.exists()){
                    book2.createNewFile();
                }
             
                book2.renameTo(bookTemp2);
               
                FileWriter brd2 = new FileWriter(saveDir + "book_t.txt"); 
                
                PrintWriter brdp2 = new PrintWriter(brd2); 
               
                File BookTemptxt = new File(saveDir + "bookTemp_t.txt");
                
                Scanner inputFile2 = new Scanner(BookTemptxt);
                
                String[] selectedID2;
              
                
                while (inputFile2.hasNext())
                {
                
                    String brEntry = inputFile2.nextLine();
               
                    selectedID2 = brEntry.split(":");
                    System.out.println("SelectedID is " + selectedID2[0]);
                    System.out.println("Book ID is " + BookIDQuantity);
                    if (selectedID2[0].equals(BookIDQuantity)) {
                        System.out.println("Second book quantity is " + bookQuantity);
                        selectedID2[5] = String.valueOf(bookQuantity);
                    }
                    
                    
                    brdp2.println(selectedID2[0] + ":" +
                                selectedID2[1] + ":" +
                                selectedID2[2] + ":" +
                                selectedID2[3] + ":" +
                                selectedID2[4] + ":" +
                                selectedID2[5]); 
                    
              }
                
                inputFile2.close();
                
                BookTemptxt.delete();
            
                brdp2.close();
            } catch (Exception e) {
              JOptionPane.showMessageDialog(null, e);
            }
    
    }
    //Method to clear textboxes
    private void ClearText(){
      txtID.setText("");
      txtBookID.setText("");
      txtDate.setText("");
      txtDueDate.setText("");
      btnGetDetails.setEnabled(false);
      btnBorrow.setEnabled(false);
      ClearBook();
    }
    
    private void ClearBook(){
        txtDetailsBookID.setText("");
        txtBookName.setText("");
        txtGenre.setText("");
        txtPublisher.setText("");
        txtAuthor.setText("");
        txtBookDetailsQuantity.setText("");
        txtBookID.setText("");
    }
    
    boolean IsEmpty;
    private void CheckEmpty(){
    
        if (txtBorrowID.getText().equals("")){
            IsEmpty = true;
            lblBorrowID.setForeground(Color.red);
            
        } else if (txtID.getText().equals("")){
            IsEmpty = true;
           lblID.setForeground(Color.red);
            
        }else if (txtBookID.getText().equals("")){
            IsEmpty = true;
            lblBookID.setForeground(Color.red);
            
        }else if (txtDate.getText().equals("")){
            IsEmpty = true;
            lblDate.setForeground(Color.red);
            
        }else if (txtDueDate.getText().equals("")){
            IsEmpty = true;
            lblDueDate.setForeground(Color.red);
   
        }else {
            IsEmpty = false;
            lblBorrowID.setForeground(Color.black);
            lblID.setForeground(Color.black);
            lblBookID.setForeground(Color.black);
            lblDate.setForeground(Color.black);
            lblDueDate.setForeground(Color.black);
            
        }
    
    
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pBorrow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBorrow;
    private javax.swing.JButton btnCheckID;
    private javax.swing.JButton btnGetDate;
    private javax.swing.JButton btnGetDetails;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblBookID;
    private javax.swing.JLabel lblBorrowID;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDueDate;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JPanel panelBackground3;
    private javax.swing.JPanel panelTitle;
    private javax.swing.JPanel pnlBookInfo;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookDetailsQuantity;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtBorrowID;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDetailsBookID;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtGenre;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPublisher;
    // End of variables declaration//GEN-END:variables
}
